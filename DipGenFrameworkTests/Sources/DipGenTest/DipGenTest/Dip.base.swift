// This is a generated file, do not edit!
// Generated by dipgen, see https://github.com/ilyapuchka/dipgen

import Foundation
import UIKit
import Dip
import DipUI

let baseContainer = DependencyContainer { container in
    unowned let container = container
    DependencyContainer.uiContainers.append(container)

    container.register(.Shared, factory: NSObject.init)
    container.register(.Shared, factory: { nibName in
        try ListViewController.init(nibName: nibName, bundle: container.resolve())
    })
}

class BaseFactory {

    private let container: DependencyContainer

    init(container: DependencyContainer = baseContainer) {
        self.container = container
    }

    func nsObject() -> NSObject {
        return try! container.resolve()
    }
    
    func listViewController(nibName nibNameOrNil: String?) -> ListViewController {
        return try! container.resolve(arguments: nibNameOrNil)
    }
    
}
